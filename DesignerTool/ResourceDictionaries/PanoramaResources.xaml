<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:pan="clr-namespace:DesignerTool.Controls.Panorama;assembly=DesignerTool.Controls"
                    xmlns:vm="clr-namespace:DesignerTool.AppLogic.ViewModels.Panorama;assembly=DesignerTool.AppLogic"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style TargetType="{x:Type pan:Panorama}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type ScrollViewer}">
                            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
                            <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
                        </Style>
                    </ControlTemplate.Resources>

                    <ScrollViewer x:Name="PART_ScrollViewer"
                                  Background="{TemplateBinding Background}"
                                  Padding="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="True">
                        <ItemsPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type pan:Panorama}, Mode=FindAncestor}, Path=HorizontalAlignment}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate DataType="{x:Type vm:PanoramaGroup}">
        <DataTemplate.Resources>
            <Style x:Key="transparentListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                <Style.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                </Style.Resources>
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="pan:GridPanel.ItemWidthSpan" Value="{Binding WidthInBlocks}" />
            </Style>
        </DataTemplate.Resources>

        <DockPanel LastChildFill="True" Background="Transparent">
            <TextBlock Style="{StaticResource TbTitle4}" Text="{Binding Header}" DockPanel.Dock="Top" Margin="5,0,0,0" />

            <ListBox ItemsSource="{Binding Tiles}" 
                     SelectionMode="Single"
                     BorderThickness="0"
                     BorderBrush="Transparent"
                     Background="Transparent"
                     HorizontalContentAlignment="Stretch"
                     VerticalContentAlignment="Stretch"
                     IsSynchronizedWithCurrentItem="True"
                     ItemContainerStyle="{StaticResource transparentListBoxItemStyle}">

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <pan:GridPanel ItemMargin="5" MinRowWidth="{Binding RelativeSource={RelativeSource AncestorType={x:Type pan:Panorama}, Mode=FindAncestor}, Path=MinRowWidthInBlocks}" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

            </ListBox>
        </DockPanel>
    </DataTemplate>


    <DataTemplate DataType="{x:Type vm:PanoramaTileViewModel}">
        <Border x:Name="bord"
                    BorderThickness="2"
                    Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type pan:Panorama}, Mode=FindAncestor}, Path=RandomTileColor}"
                    BorderBrush="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background}"
                    Margin="0">
            <Border.Triggers>
                <EventTrigger RoutedEvent="Border.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grdSide1">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grdSide2">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Border.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grdSide1">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grdSide2">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Border.Triggers>
            <Grid Name="grdContent" Margin="2">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid Name="grdSide1">
                    <Grid Height="100" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Path Name="pathVector" Style="{Binding VectorStyleName, Converter={StaticResource stringToStyleConverter}}" Margin="10" Height="Auto" />
                        <Image Name="imgTile" Source="{Binding ImageUrl}" />
                    </Grid>
                </Grid>

                <Grid Name="grdSide2" Opacity="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding Description}" Style="{StaticResource TbDefault}" VerticalAlignment="Top" TextWrapping="Wrap" Foreground="White" />
                    <Grid Height="30" Margin="5,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Column="1" >
                        <Path Style="{Binding Path=Style, ElementName=pathVector}" Margin="2" Height="Auto" />
                        <Image Source="{Binding Path=Source, ElementName=imgTile}" />
                    </Grid>
                </Grid>

                <TextBlock Text="{Binding Heading}" Grid.Row="1" Style="{StaticResource TbStrong6}" Foreground="White" HorizontalAlignment="Right" />
            </Grid>
        </Border>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsPressed}" Value="True">
                <Setter TargetName="bord" Property="Margin" Value="4" />
                <Setter TargetName="bord" Property="Opacity" Value="0.5" />
            </DataTrigger>
        </DataTemplate.Triggers>

    </DataTemplate>
</ResourceDictionary>
    